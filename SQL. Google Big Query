-- Big project for SQL
-- Link instruction: https://docs.google.com/spreadsheets/d/1WnBJsZXj_4FDi2DyfLH1jkWtfTridO2icWbWCh7PLs8/edit#gid=0


-- Query 01: calculate total visit, pageview, transaction and revenue for Jan, Feb and March 2017 order by month
#standardSQL
SELECT  
  format_date ('%Y%m', parse_date ('%Y%m%d', date)) as month,
  sum (totals.visits) as visits, 
  sum (totals.pageviews) as pageviews, 
  sum (totals.transactions) as transactions, 
  round(sum (totals.totaltransactionrevenue)*power(10,-6),1) as revenue, 

FROM `bigquery-public-data.google_analytics_sample.ga_sessions_*`
where _table_suffix between '20170101' and '20170331'
group by month 
order by month; 


-- Query 02: Bounce rate per traffic source in July 2017
#standardSQL
SELECT  
  trafficSource.source as source, 
  sum(totals.visits) as total_visits,
  sum(totals.bounces) as total_no_of_bounces,
  (sum(totals.bounces)/ sum(totals.visits))*100 as bounce_rate 
FROM `bigquery-public-data.google_analytics_sample.ga_sessions_*`
where _table_suffix between '20170701' and '20170731'
group by source
order by total_visits desc
LIMIT 4;

-- Query 3: Revenue by traffic source by week, by month in June 2017
with month as (
        
SELECT  
  "Week" as time_type,
  format_date('%Y%m', parse_date('%Y%m%d', date)) as time,
  trafficSource.source as source, 
  round (sum(totals.totalTransactionRevenue)/1000000,1) as revenue  

FROM `bigquery-public-data.google_analytics_sample.ga_sessions_*`
where _table_suffix between '20170601' and '20170631'
group by time_type, time, source), 
week as (
 SELECT  
  "Month" as time_type,
  format_date('%Y%w', parse_date('%Y%m%d', date)) as time,
  trafficSource.source as source, 
  round (sum(totals.totalTransactionRevenue)/1000000,1) as revenue  

FROM `bigquery-public-data.google_analytics_sample.ga_sessions_*`
where _table_suffix between '20170601' and '20170631'
group by time_type, time, source)

select * from month 
UNION all
select * from week
order by revenue desc
limit 4

--Query 04: Average number of product pageviews by purchaser type (purchasers vs non-purchasers) in June, July 2017. Note: totals.transactions >=1 for purchaser and totals.transactions is null for non-purchaser
#standardSQL

with purchaser as (
SELECT  
  format_date('%Y%m', parse_date ('%Y%m%d', date)) as month, 
  sum(totals.pageviews)/count (distinct fullvisitorid) as avg_pageviews_purchase
FROM `bigquery-public-data.google_analytics_sample.ga_sessions_*` 
where _table_suffix between '20170601' and '20170731'
and totals.transactions >=1
group by month ),
non_purchaser as (
SELECT  
  format_date('%Y%m', parse_date ('%Y%m%d', date)) as month, 
  sum(totals.pageviews)/count (distinct fullvisitorid) as avg_pageviews_non_purchase
FROM `bigquery-public-data.google_analytics_sample.ga_sessions_*` 
where _table_suffix between '20170601' and '20170731'
and totals.transactions is null
group by month)
select 
  purchaser.month, 
  avg_pageviews_purchase, 
  avg_pageviews_non_purchase
from purchaser 
inner join non_purchaser
on purchaser.month = non_purchaser.month 


-- Query 05: Average number of transactions per user that made a purchase in July 2017
#standardSQL
SELECT  
  format_date ('%Y%m',parse_date('%Y%m%d', date)) as Month, 
  sum (totals.transactions)/ count (distinct fullvisitorid) as Avg_total_transactions_per_user
FROM `bigquery-public-data.google_analytics_sample.ga_sessions_*`
where _table_suffix between '20170701' and '20170731'
and totals.transactions >=1 
group by Month;

-- Query 06: Average amount of money spent per session
#standardSQL
SELECT 
  format_date('%Y%m',parse_date ('%Y%m%d', date)) as Month, 
  sum (totals.totalTransactionRevenue)/ count (fullvisitorid) as avg_revenue_by_user_per_visit
FROM `bigquery-public-data.google_analytics_sample.ga_sessions_*` 
where _table_suffix between '20170701' and '20170731'
and totals.transactions >=1
group by month


-- Query 07: Other products purchased by customers who purchased product "YouTube Men's Vintage Henley" in July 2017. Output should show product name and the quantity was ordered.
#standardSQL
with buyer_list as(
SELECT
        distinct fullVisitorId
    FROM `bigquery-public-data.google_analytics_sample.ga_sessions_201707*`
    , UNNEST(hits) AS hits
    , UNNEST(hits.product) as product
    WHERE product.v2ProductName = "YouTube Men's Vintage Henley"
    AND totals.transactions>=1
    AND product.productRevenue is not null)
select 
    product.v2ProductName as other_purchased_products,
    sum (product.productQuantity) as quantity
from `bigquery-public-data.google_analytics_sample.ga_sessions_201707*`, 
 UNNEST(hits) AS hits,
 UNNEST(hits.product) as product
 inner join buyer_list
 using (fullVisitorId)
 WHERE product.v2ProductName != "YouTube Men's Vintage Henley" -- != is not equal
 AND product.productRevenue is not null
 group by other_purchased_products
order by quantity desc
limit 4
 


--Query 08: Calculate cohort map from pageview to addtocart to purchase in last 3 month. For example, 100% pageview then 40% add_to_cart and 10% purchase.
#standardSQL

with product_view as (
SELECT 
  format_date ('%Y%m', parse_date('%Y%m%d', date)) as month, 
  count (product.productSKU) as num_product_view

 FROM `bigquery-public-data.google_analytics_sample.ga_sessions_*`, 
 UNNEST (hits) as hits, 
 UNNEST (hits.product) as product 
 where _table_suffix between '20170101' and '20170331'
 and hits.eCommerceAction.action_type = '2'
 group by month), 
  add_to_cart as (
SELECT 
  format_date ('%Y%m', parse_date('%Y%m%d', date)) as month, 
  count (product.productSKU) as num_addtocart

 FROM `bigquery-public-data.google_analytics_sample.ga_sessions_*`, 
 UNNEST (hits) as hits, 
 UNNEST (hits.product) as product 
 where _table_suffix between '20170101' and '20170331'
 and hits.eCommerceAction.action_type = '3'
 group by month), 
 purchase as (
SELECT 
  format_date ('%Y%m', parse_date('%Y%m%d', date)) as month, 
  count (product.productSKU) as num_purchase

 FROM `bigquery-public-data.google_analytics_sample.ga_sessions_*`, 
 UNNEST (hits) as hits, 
 UNNEST (hits.product) as product 
 where _table_suffix between '20170101' and '20170331'
 and hits.eCommerceAction.action_type = '6'
 group by month)

 select 
  product_view.month, 
  num_product_view, 
  num_addtocart, 
  num_purchase, 
  round((num_addtocart/ num_product_view)*100, 2) as add_to_cart_rate, 
  round ((num_purchase/ num_product_view)*100,2) as purchase_rate
from product_view 
inner join add_to_cart using (month)
inner join purchase using (month)
order by purchase.month
